{
  "name": "shakadb",
  "version": "1.0.2",
  "description": "Shaka Database",
  "main": "dist/prisma/lib/client.js",
  "types": "dist/prisma/lib/client.d.ts",
  "exports": {
    ".": {
      "types": "./dist/prisma/lib/client.d.ts",
      "default": "./dist/prisma/lib/client.js"
    },
    "./lib/client": {
      "types": "./dist/prisma/lib/client.d.ts",
      "default": "./dist/prisma/lib/client.js"
    },
    "./helpers": {
      "types": "./dist/prisma/helpers/index.d.ts",
      "default": "./dist/prisma/helpers/index.js"
    },
    "./seed": {
      "types": "./dist/prisma/seed.d.ts",
      "default": "./dist/prisma/seed.js"
    },
    "./prisma/schema.prisma": "./prisma/schema.prisma",
    "./generated/prisma-client": {
      "types": "./prisma/generated/prisma-client/index.d.ts",
      "default": "./prisma/generated/prisma-client/index.js"
    }
  },
  "files": [
    "dist/**",
    "prisma/**",
    "package.json"
  ],
  "publishConfig": {
    "access": "public"
  },
  "directories": {
    "doc": "docs"
  },
  "scripts": {
    "pretest": "npm run prisma:format",
    "test": "dotenv -e .env -e .env.test -- jest",
    "test:related": "dotenv -e .env -e .env.test -- jest --findRelatedTests --passWithNoTests",
    "test:ci": "dotenv -e .env -e .env.test -- jest --runInBand --passWithNoTests",
    "docker:seed": "dotenv -e .env.docker -- npm run prisma:db:seed",
    "dev": "dotenv -e .env.local -- tsx prisma/main.ts",
    "lint": "eslint .",
    "build": "tsc -b && tsc-alias -p tsconfig.json",
    "prepack": "npm run prisma:generate && npm run build",
    "soft:clean": "rm -rf dist prisma/generated node_modules tsconfig.tsbuildinfo",
    "hard:clean": "rm -rf dist prisma/generated node_modules package-lock.json tsconfig.tsbuildinfo",
    "prepublishOnly": "npm run prisma:generate && npm run build",
    "prisma:generate": "prisma generate",
    "prisma:migrate:dev": "prisma migrate dev",
    "prisma:migrate:deploy": "prisma migrate deploy",
    "prisma:migrate:reset": "prisma migrate reset",
    "prisma:migrate:reset:force": "prisma migrate reset --force",
    "prisma:migrate:status": "prisma migrate status",
    "prisma:db:seed": "prisma db seed",
    "prisma:db:push": "prisma db push",
    "prisma:db:pull": "prisma db pull",
    "prisma:format": "prisma format",
    "db:cleanup": "tsx prisma/helpers/cleanUp.ts",
    "prisma:studio": "prisma studio",
    "publish:package": "npm publish --access public",
    "prepare": "husky",
    "commit": "git-cz",
    "commitlint": "commitlint --edit",
    "typecheck": "tsc -p tsconfig.json --noEmit"
  },
  "keywords": [],
  "author": "Ange230700",
  "license": "ISC",
  "type": "module",
  "prisma": {
    "seed": "tsx prisma/main.ts"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/js": "^9.28.0",
    "@faker-js/faker": "^9.8.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.15.29",
    "commitizen": "^4.3.1",
    "cz-conventional-changelog": "^3.3.0",
    "dotenv-cli": "^9.0.0",
    "eslint": "^9.28.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-prettier": "^5.4.1",
    "globals": "^16.2.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^16.1.0",
    "prettier": "^3.5.3",
    "prisma": "^6.11.1",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "tsc-alias": "^1.8.16",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.19.4",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.33.1"
  },
  "dependencies": {
    "@prisma/client": "^6.11.1",
    "argon2": "^0.43.0"
  },
  "lint-staged": {
    "prisma/schema.prisma": [
      "npm run prisma:format"
    ],
    "*.{js,ts}": [
      "prettier --write",
      "eslint --cache --fix",
      "npm run test:related --"
    ],
    "*.json": [
      "prettier --write",
      "eslint --cache --fix"
    ]
  },
  "validate-branch-name": {
    "pattern": "^(master|main|develop){1}$|^(feature|fix|hotfix|release)/.+$",
    "errorMsg": "Branch name must be master, main, develop, feature/xxx, fix/xxx, hotfix/xxx or release/xxx"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
